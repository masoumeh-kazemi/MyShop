using Common.Query;
using Dapper;
using Shop.Infrastructure.Persistent.Dapper;
using Shop.Infrastructure.Persistent.EF;
using Shop.Query.Products.DTOs;

namespace Shop.Query.Products.Galleries.GetByList;

public class GetProductImageByListQuery : IQuery<List<ProductImageDto>>
{
    
}

public class GetProductImageByListQueryHandler : IQueryHandler<GetProductImageByListQuery, List<ProductImageDto>>
{
    private readonly DapperContext _dapperContext;

    public GetProductImageByListQueryHandler(DapperContext dapperContext)
    {
        _dapperContext = dapperContext;
    }
    public async Task<List<ProductImageDto>> Handle(GetProductImageByListQuery request, CancellationToken cancellationToken)
    {
        var connection = _dapperContext.CreateConnection();
        var sql = $@"SELECT * FROM {_dapperContext.ProductImages}";
        var result = await connection.QueryAsync<ProductImageDto>(sql);
        return result.ToList();
    }
}